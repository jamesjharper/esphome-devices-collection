substitutions:
  control_name: ""
  id: ""
  target_switch_id: ""

  constant_brightness: "true"
  gamma_correct: "2.0"
  default_transition_length: "3s"

  cold_white_color_temperature: "6800 K"
  warm_white_color_temperature: "2500 K"

  cold_white_output_1: ""
  warm_white_output_1: ""

  cold_white_output_2: ""
  warm_white_output_2: ""

  cold_white_output_3: ""
  warm_white_output_3: ""

  assignment_1: "0.0"
  assignment_2: "0.0"
  assignment_3: "0.0"

  hidden_controller: "false"

light:
  - platform: cwww
    id: ${id}
    name: "${control_name} Brightness"
    cold_white: _${id}_output_cw
    warm_white: _${id}_output_ww
    cold_white_color_temperature: ${cold_white_color_temperature}
    warm_white_color_temperature: ${warm_white_color_temperature}
    constant_brightness: ${constant_brightness}
    gamma_correct: ${gamma_correct}
    default_transition_length: ${default_transition_length}
    disabled_by_default: ${hidden_controller}
    #on_state:
    #  - lambda: |-
    #      // Ignore on state if `${target_switch_id}` is in off state
    #      if (id(${target_switch_id}).state == false) {
    #        auto call = id(${id}_brightness_light).make_call();
    #        call.set_state(false);
    #        call.set_publish(false);
    #        call.perform();
    #      }
    #
    #      if (id(${id}_disable_remote_switch).state == true) {
    #        auto current_brightness = id(${id}_brightness_light).current_values.get_brightness();
    #        auto call = id(${id}_brightness_light).make_call();
    #        call.set_state(true);
    #        call.set_brightness_if_supported(current_brightness);
    #        call.set_transition_length(0); 
    #        call.set_publish(false);
    #        call.perform();
    #      }


output:
  - platform: multi_sink_source_float_output
    id: _${id}_output_cw
    sinks:
      - output_id: ${cold_white_output_1}
        percentage: ${assignment_1}
      - output_id: ${cold_white_output_2}
        percentage: ${assignment_2}
      - output_id: ${cold_white_output_3}
        percentage: ${assignment_3}

  - platform: multi_sink_source_float_output
    id: _${id}_output_ww   
    sinks:
      - output_id: ${warm_white_output_1}
        percentage: ${assignment_1}
      - output_id: ${warm_white_output_2}
        percentage: ${assignment_2}
      - output_id: ${warm_white_output_3}
        percentage: ${assignment_3}